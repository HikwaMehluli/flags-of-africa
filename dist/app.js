(()=>{var e={379:()=>{document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("menu-icon"),t=document.getElementById("sidebar"),s=document.getElementById("overlay"),a=document.querySelector(".game-container");e&&e.addEventListener("click",()=>{e.classList.toggle("open"),t.classList.toggle("open"),s.classList.toggle("open")}),s&&s.addEventListener("click",()=>{e.classList.remove("open"),t.classList.remove("open"),s.classList.remove("open"),a&&a.classList.remove("blur")})})},681:()=>{document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("high-scores-list"),t=document.getElementById("no-scores-container");if(e&&t){const s=JSON.parse(localStorage.getItem("highScores"))||[];s.length>0?(e.style.display="block",t.style.display="none",e.innerHTML=s.map(e=>`\n                <li>\n                    <span class="player-name">${e.name}</span>\n                    <span class="score-details">\n                        ${e.moves} moves - ${e.time}\n                    </span>\n                    <span class="game-level">\n                        ${e.difficulty} - ${e.region}\n                    </span>\n                </li>\n            `).join("")):(e.style.display="none",t.style.display="block")}})},771:()=>{class e{constructor(){this.cards=[],this.flippedCards=[],this.matchedPairs=0,this.moves=0,this.startTime=null,this.timer=null,this.gameStarted=!1,this.gameBoard=document.getElementById("game-board"),this.movesElement=document.getElementById("moves"),this.timeElement=document.getElementById("time"),this.confettiElement=document.querySelector(".confetti"),this.nameModal=document.getElementById("name-modal"),this.nameForm=document.getElementById("name-form"),this.playerNameInput=document.getElementById("player-name"),this.modalFinalMoves=document.getElementById("modal-final-moves"),this.modalFinalTime=document.getElementById("modal-final-time"),this.closeModalButton=document.querySelector(".close-modal"),this.difficulty="easy",this.region="africa",this.initializeSelectors(),this.startNewGame()}initializeSelectors(){const e=document.getElementById("difficulty-select"),t=document.getElementById("region-select"),s=document.getElementById("new-game-btn"),a=document.getElementById("restart-btn");e.addEventListener("change",e=>{this.difficulty=e.target.value,this.startNewGame()}),t.addEventListener("change",e=>{this.region=e.target.value,this.startNewGame()}),s.addEventListener("click",()=>this.startNewGame()),a.addEventListener("click",()=>this.restartGame()),this.nameForm&&this.nameForm.addEventListener("submit",e=>{e.preventDefault();const t=this.playerNameInput.value.trim();t&&(this.saveScore(t,this.moves,this.timeElement.textContent,this.difficulty,this.region),this.nameModal.style.display="none",this.playerNameInput.value="")}),this.closeModalButton&&this.closeModalButton.addEventListener("click",()=>{this.nameModal.style.display="none"}),this.nameModal&&this.nameModal.addEventListener("click",e=>{e.target===this.nameModal&&(this.nameModal.style.display="none")})}async getAfricanFlags(){try{const e=await fetch("js/flags.json"),t=await e.json();return"africa"===this.region?[...t.north,...t.southern,...t.east,...t.west,...t.central]:t[this.region]||t.southern}catch(e){return console.error("Error loading flag data:",e),[]}}getDifficultySettings(){return{easy:{rows:3,cols:4,pairs:6},medium:{rows:4,cols:4,pairs:8},hard:{rows:5,cols:4,pairs:10}}[this.difficulty]}async generateCards(){const{pairs:e}=this.getDifficultySettings();let t=await this.getAfricanFlags();t=this.shuffleArray(t);const s=[],a=t.slice(0,e);for(let t=0;t<e&&t<a.length;t++){const e=a[t];s.push(e,e)}return this.shuffleArray(s)}shuffleArray(e){const t=[...e];for(let e=t.length-1;e>0;e--){const s=Math.floor(Math.random()*(e+1));[t[e],t[s]]=[t[s],t[e]]}return t}async createGameBoard(){this.cards=await this.generateCards(),this.renderGameBoard()}renderGameBoard(){const{rows:e,cols:t}=this.getDifficultySettings();this.gameBoard.style.gridTemplateColumns=`repeat(${t}, 1fr)`,this.gameBoard.innerHTML="",this.cards.forEach((e,t)=>{const s=document.createElement("div");s.className="card",s.dataset.index=t,s.innerHTML=`\n                <div class="card-back">?</div>\n                <div class="card-front" data-tippy-content="${e.country}">\n                    ${e.flag}\n                </div>\n            `,s.addEventListener("click",()=>this.flipCard(s,t)),this.gameBoard.appendChild(s)}),this.initializeTooltips()}initializeTooltips(){tippy("[data-tippy-content]",{followCursor:!0})}flipCard(e,t){this.flippedCards.length>=2||e.classList.contains("flipped")||e.classList.contains("matched")||(this.gameStarted||(this.startTimer(),this.gameStarted=!0),e.classList.add("flipped"),this.flippedCards.push({element:e,country:this.cards[t].country,index:t}),2===this.flippedCards.length&&(this.moves++,this.movesElement.textContent=this.moves,setTimeout(()=>this.checkMatch(),1e3)))}checkMatch(){const[e,t]=this.flippedCards;e.country===t.country?(e.element.classList.add("matched"),t.element.classList.add("matched"),this.matchedPairs++,this.matchedPairs===this.getDifficultySettings().pairs&&this.gameWon()):(e.element.classList.remove("flipped"),t.element.classList.remove("flipped")),this.flippedCards=[]}startTimer(){this.startTime=Date.now(),this.timer=setInterval(()=>{const e=Math.floor((Date.now()-this.startTime)/1e3),t=Math.floor(e/60).toString().padStart(2,"0"),s=(e%60).toString().padStart(2,"0");this.timeElement.textContent=`${t}:${s}`},1e3)}stopTimer(){this.timer&&(clearInterval(this.timer),this.timer=null)}gameWon(){this.stopTimer();const e=this.timeElement.textContent;this.confettiElement&&this.confettiElement.classList.add("show"),this.nameModal&&(this.modalFinalMoves.textContent=this.moves,this.modalFinalTime.textContent=e,this.nameModal.style.display="block")}saveScore(e,t,s,a,i){const n={name:e,moves:t,time:s,difficulty:a,region:i},o=JSON.parse(localStorage.getItem("highScores"))||[];o.push(n),o.sort((e,t)=>e.moves-t.moves||e.time.localeCompare(t.time)),o.splice(10),localStorage.setItem("highScores",JSON.stringify(o))}resetGame(){this.stopTimer(),this.flippedCards=[],this.matchedPairs=0,this.moves=0,this.gameStarted=!1,this.movesElement.textContent="0",this.timeElement.textContent="00:00",this.confettiElement&&this.confettiElement.classList.remove("show"),this.nameModal&&(this.nameModal.style.display="none")}startNewGame(){this.resetGame(),this.createGameBoard()}async restartGame(){this.resetGame(),this.cards=this.shuffleArray([...this.cards]),await this.createGameBoard()}}let t;window.addEventListener("DOMContentLoaded",()=>{t=new e})},972:()=>{document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("theme-toggle"),t=document.body,s=e=>{"dark"===e?t.classList.add("dark-mode"):t.classList.remove("dark-mode")},a=localStorage.getItem("theme");s(a||"light"),e.addEventListener("click",()=>{t.classList.contains("dark-mode")?(s("light"),localStorage.setItem("theme","light")):(s("dark"),localStorage.setItem("theme","dark"))})})}},t={};function s(a){var i=t[a];if(void 0!==i)return i.exports;var n=t[a]={exports:{}};return e[a](n,n.exports,s),n.exports}s.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return s.d(t,{a:t}),t},s.d=(e,t)=>{for(var a in t)s.o(t,a)&&!s.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";s(771),s(379),s(681),s(972)})()})();